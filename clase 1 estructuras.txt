package recursiones;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class recurciones{
	
	public static void main(String[] args) 
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		try
		{
			int n = Integer.parseInt(br.readLine());
			int x = Integer.parseInt(br.readLine());
			int result = multiplicacion(n, x);
			bw.write("multiplicacion: " + result + "\n");
			bw.flush();
			
			result = factorial(n);
			bw.write("factorial: " + result + "\n");
			
			result = fibonacci(n);
			bw.write("fibonacci: " + result + "\n");
			
			result = fibonacci_array(n);
			bw.write("fibonacci_: " + result + "\n");
			
			bw.flush();
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
	}

	public static int multiplicacion(int n, int x) 
	{
		if(x == 1)
		{
			return n;
		}else {
			return n + multiplicacion(n, x-1);
		}
	}
	
	public static int factorial(int x)
	{
		if(x == 1) 
			return x;
		else 
			return x * factorial(x-1);
		
	}
	
	public static int fibonacci(int x)
	{
		if(x==0) 
			return 0;
		else
			if(x==1)
				return 1;
			else 
				return fibonacci(x-1) + fibonacci(x-2);
	}
	
	public static int fibonacci_array(int n)
	{
		int[] = serie = new int ;
	}
	
	public static int pascal(int n, int k) 
	{
		if(k ==0 || k == n)
			return 1;
		else
			return pascal(n-1,k-1) + pascal(n-1, k);
	}
}

